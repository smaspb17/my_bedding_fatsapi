services:

  web:
    build: .
    image: web-image
    container_name: web
    restart: always
    env_file:
      - .env
    command: sh -c "uvicorn main:app --host 0.0.0.0 --port 8000"
    expose:
      - "8000"
    networks:
      - dbnet
    volumes:
      - ./:/app
    depends_on:
      - postgres

  postgres:
    image: postgres:17-alpine
    container_name: psgr
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dbnet

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    networks:
      - dbnet
    depends_on:
      - postgres

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - dbnet

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
      - dbnet
    depends_on:
      - web

#  сертификат для ssl
#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    command: certonly --webroot --webroot-path=/var/www/certbot --email sc_lib@list.ru --agree-tos --no-eff-email -d django-balak.ru
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    depends_on:
#      - nginx

volumes:
  postgres-data:
  redis-data:

networks:
  dbnet:
    driver: bridge
